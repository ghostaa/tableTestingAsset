package com.ibm.btt.application.op;

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Random;

import com.ibm.btt.base.BTTServerOperation;
import com.ibm.btt.base.IndexedCollection;
import com.ibm.btt.base.KeyedCollection;
import com.ibm.btt.base.types.impl.Currency;

/**
 * Class Generated by BTT Tool Created since: 2012/09/27 11:17:22
 */
public class InitPaginationData extends BTTServerOperation
{
	private Random rand = new Random();

	@Override
	public void execute() throws Exception
	{
		// TODO Auto-generated method stub
		String img[] = { "img/JPG.JPG", "img/PNG.png", "img/BMP.bmp", "img/GIF.gif" };
		KeyedCollection opData = this.getContext().getKeyedCollection();
		IndexedCollection allAccountList = (IndexedCollection) opData.getElementAt("AllAccountList");
		IndexedCollection accountInfoList = (IndexedCollection) opData.getElementAt("AccountInfoList");
		IndexedCollection accountTypeForSelect = (IndexedCollection) opData.getElementAt("AccountTypeForSelect");
		IndexedCollection localtionForComboBox = (IndexedCollection) opData.getElementAt("LocaltionForComboBox");
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

		// set value
		for (int i = 0; i < allAccountList.size(); i++)
		{
			allAccountList.setValueAt(i + ".AccountName", "Helen" + i);
			allAccountList.setValueAt(i + ".TradeTime", rand.nextInt(10));
			allAccountList.setValueAt(i + ".AccountType", rand.nextInt(4));
			allAccountList.setValueAt(i + ".AccountBlance", new Currency("USD", new BigDecimal(rand.nextInt(99999999))));
			allAccountList.setValueAt(i + ".MaximumAmount", new BigDecimal(rand.nextDouble() * 1000000000));
			int month = (int) (Math.random() * 11 + 1);
			int day = (int) (Math.random() * 27 + 1);
			String dateString = "2012-" + month + "-" + day;

			allAccountList.setValueAt(i + ".AccountOpeningDate", sdf.parse(dateString));
			allAccountList.setValueAt(i + ".Rate", rand.nextDouble());
			allAccountList.setValueAt(i + ".Localtion", rand.nextBoolean() ? "CHINA" : "SPAIN");
			allAccountList.setValueAt(i + ".Usable", rand.nextBoolean());
			allAccountList.setValueAt(i + ".accountAttribution", rand.nextBoolean() ? 0 : 1);
			allAccountList.setValueAt(i + ".ImageField", img[rand.nextInt(4)]);
		}

		for (int i = 0; i < 4; i++)
		{
			switch (i)
			{
				case 0:
					accountTypeForSelect.setValueAt(i + ".labelField", "SUPER");
					localtionForComboBox.setValueAt(i + ".labelField", "CHINA");
					break;
				case 1:
					accountTypeForSelect.setValueAt(i + ".labelField", "VIP");
					localtionForComboBox.setValueAt(i + ".labelField", "SPAIN");
					break;
				case 2:
					accountTypeForSelect.setValueAt(i + ".labelField", "LUCKY");
					localtionForComboBox.setValueAt(i + ".labelField", "RUSSIA");
					break;
				case 3:
					accountTypeForSelect.setValueAt(i + ".labelField", "GOLDEN");
					localtionForComboBox.setValueAt(i + ".labelField", "USA");
					break;

				default:
					break;
			}

			accountTypeForSelect.setValueAt(i + ".valueField", i);
		}

		//set the first data
		for (int i = 0; i < accountInfoList.size(); i++)
		{
			accountInfoList.setValueAt(i + ".AccountName", allAccountList.getValueAt(i + ".AccountName"));
			accountInfoList.setValueAt(i + ".TradeTime", allAccountList.getValueAt(i + ".TradeTime"));
			accountInfoList.setValueAt(i + ".AccountType", allAccountList.getValueAt(i + ".AccountType"));
			accountInfoList.setValueAt(i + ".AccountBlance", allAccountList.getValueAt(i + ".AccountBlance"));
			accountInfoList.setValueAt(i + ".MaximumAmount", allAccountList.getValueAt(i + ".MaximumAmount"));
			accountInfoList.setValueAt(i + ".AccountOpeningDate", allAccountList.getValueAt(i + ".AccountOpeningDate"));
			accountInfoList.setValueAt(i + ".Rate", allAccountList.getValueAt(i + ".Rate"));
			accountInfoList.setValueAt(i + ".Localtion", allAccountList.getValueAt(i + ".Localtion"));
			accountInfoList.setValueAt(i + ".Usable", allAccountList.getValueAt(i + ".Usable"));
			accountInfoList.setValueAt(i + ".accountAttribution", allAccountList.getValueAt(i + ".accountAttribution"));
			accountInfoList.setValueAt(i + ".ImageField", allAccountList.getValueAt(i + ".ImageField"));
		}
		
		AccountListDB.getAllAccountList(allAccountList);

		fireExitEvent("ok");
	}
}
